//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "t_blog_user")]
#[serde(rename_all = "snake_case")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
    #[sea_orm(unique)]
    pub user_id: Option<String>,
    pub nickname: Option<String>,
    #[sea_orm(unique)]
    pub username: Option<String>,
    pub description: Option<String>,
    pub gender: Option<enumeration::Gender>,
    pub password: Option<String>,
    pub avatar: Option<String>,
    pub email: Option<String>,
    pub tel: Option<String>,
    pub addr: Option<String>,
    pub token: Option<String>,
    pub ip: Option<String>,
    pub sign_status: Option<i8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
